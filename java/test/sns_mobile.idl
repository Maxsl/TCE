


struct Tc_redirect_p_User_t{
	string token; 
};

struct Tc_redirect_r_Result_t{
	int 	code;
	string 	tc_srv_ip;
	int 	tc_srv_port;
	string msg;
};


struct Result_r_error_t{
	string code;
};


interface Tc{
	Tc_redirect_r_Result_t redirect( Tc_redirect_p_User_t p);	
	Tc_redirect_r_Result_t hello( Tc_redirect_p_User_t p);	
};



struct Ts_heartbeat_p_User_t{
	string id;
};


struct Ts_gps_p_GPS_t{
	float lon;
	float lat;
	float speed;
	float direction;
	int		time;
};

struct Ts_gps_p_Properties_t{
	string senderid;
	string target_type;
	string users;
	string groups;
};

struct Ts_verify_r_User_t{
	string id;
};

struct Ts_verify_r_Group_t{
	string id;
	string name;
	string type;
};

sequence<Ts_verify_r_Group_t> Ts_verify_r_Groups_t;

struct Ts_verify_r_Result_t{
	int code;
	string msg;
	Ts_verify_r_User_t user;
	Ts_verify_r_Groups_t groups;
};


struct Ts_verify_p_User_t{
	string token;
};

interface Ts{
	void heartbeat(Ts_heartbeat_p_User_t p);
	void gps(Ts_gps_p_GPS_t p,Ts_gps_p_Properties_t props);
	Ts_verify_r_Result_t verify(Ts_verify_p_User_t p);
};


struct Term_sync_notify_p_Sync_t{
	string group_type;
	string group_id;
};

// mobile device
interface Terminal{
	void gps_msg(Ts_gps_p_GPS_t gps,string group_ids,string user_id);
	string test1(string name,int num);
	void sync_notify(Term_sync_notify_p_Sync_t sync);
};


//-- http rpc (Location Server) begin  --
struct Loc_getlocation_r_location_t{
	string user_id;
	string dev_id;
	float  lon;
	float  lat;
	int    time;
	float  speed;
	float  direction;
	float  roadlink;
};

struct Loc_getlocation_r_result_t{
	string code;
	Loc_getlocation_r_location_t loc;
};

struct Loc_getlocation_p_any_t{
	string dev_id;
};

sequence<Loc_getlocation_r_location_t> Loc_getlocation_r_locations_t;

struct Loc_spatialquery_p_any_t{
	string circle;
	string rect;
	int elapsed;
	int limit;
	int order;
	string group_id;
};

struct Loc_spatialquery_r_result_t{
	string code;
	Loc_getlocation_r_locations_t locs;
};

interface LocServer{
	Loc_getlocation_r_result_t location_get(Loc_getlocation_p_any_t dev_id);
	Loc_spatialquery_r_result_t spatial_query(Loc_spatialquery_p_any_t p);
};


//-------------------------------------------------------------
struct Auth_login_p_any_t{
	string user;
	string pwd;
	string type; // 1 - from app
};

struct Auth_login_r_token_t{
	string value;
};

struct Auth_login_r_result_t{
	string code;
	Auth_login_r_token_t token;
};

//-- query nick name by user ids
struct Auth_querynickname_p_userlist_t{
	string userids;
};

struct Auth_user_detail_p_item_t{
	string userid;
	string nickname;
};
sequence <Auth_user_detail_p_item_t> Auth_user_detail_p_items_t;

struct Auth_querynickname_r_result_t{
	string code;
	Auth_user_detail_p_items_t items;
};


interface AuthServer{
	Auth_login_r_result_t login(Auth_login_p_any_t user);
	Auth_querynickname_r_result_t querynickname(Auth_querynickname_p_userlist_t userids);
};

//http request POST
struct CarTerm_QueryTeamMember_p_item_t{
	string empty_not_used;
};

struct CarTerm_QueryTeamMember_user_t{
	string id;
	string name;
};

sequence <CarTerm_QueryTeamMember_user_t> CarTerm_QueryTeamMember_users_t;
//http POST response
struct CarTerm_QueryTeamMember_r_result_t{
	string code;	
	CarTerm_QueryTeamMember_users_t users;
	Result_r_error_t error; 
};
//-- user group/ungroup
interface CarTeamServer{
	CarTerm_QueryTeamMember_r_result_t QueryTeamMember();
};

//-------------------------------------------------------------


//-- http rpc end --
